openapi: 3.0.0
info:
  title: Meldingskatalog for rapids
  version: 1.0.0
  contact:
    name: '#team-dagpenger'
servers:
  - url: https://dp-rapid-meldingskatalog.intern.dev.nav.no
    description: dev
tags:
  - name: Melding
    description: >-
      Gir oversikt over meldinger som har vært publisert på rapiden
  - name: Behov
    description: >-
      Gir oversikt over behov og status på de
  - name: Meldingskatalog
    description: >-
      Gir en oversikt over hvilke meldingstyper som finnes i rapiden
  - name: System
    description: >-
      Gir en oversikt over hvilke system som er involvert, hvilke meldinger de produserer og hvilke system de snakker med.

paths:
  /melding:
    get:
      summary: Gir en liste over alle meldinger som har vært publisert på rapiden
      operationId: get-meldinger
      tags:
        - Melding
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Melding'
    post:
      summary: Publiserer en ny melding
      operationId: post-melding
      tags:
        - Melding
      requestBody:
        required: true
        content:
          application/json:
            schema: { }
      responses:
        '201':
          description: Meldingen ble publisert
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Melding'
  /melding/{meldingsreferanseId}/innhold:
    parameters:
      - name: meldingsreferanseId
        in: path
        required: true
        schema:
          type: string
          format: uuid
    get:
      summary: Gir innholdet i en bestemt melding
      operationId: get-melding-innhold
      tags:
        - Melding
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: { }
  /behov:
    get:
      summary: Gir en liste over alle behov
      operationId: get-behov
      tags:
        - Behov
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Behov'
  /behov/{behovId}:
    get:
      summary: Gir et bestemt behov
      operationId: get-behov-id
      tags:
        - Behov
      parameters:
        - name: behovId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Behov'
  /behov/{behovId}/republiser:
    post:
      summary: Republiserer ett bestemt behov
      operationId: get-behov-republiser
      tags:
        - Behov
      parameters:
        - name: behovId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Melding'
  /meldingstype:
    get:
      summary: Gir en liste med alle kjente meldingstyper
      operationId: get-meldingstyper
      tags:
        - Meldingskatalog
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Meldingstype'
  /meldingstype/{meldingstype}:
    parameters:
      - $ref: '#/components/parameters/Meldingstype'
    get:
      summary: Gir en bestemt meldingstype
      operationId: get-meldingstype
      tags:
        - Meldingskatalog
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Meldingstype'
  /meldingstype/{meldingstype}/meldinger:
    parameters:
      - $ref: '#/components/parameters/Meldingstype'
    get:
      summary: Gir en liste med meldinger av en bestemt meldingstype
      operationId: get-meldinger-per-meldingstype
      tags:
        - Meldingskatalog
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Melding'
  /meldingstype/{meldingstype}/schema:
    parameters:
      - $ref: '#/components/parameters/Meldingstype'
    get:
      summary: Gir et JSON Schema som brukes for å validere meldinger av en bestemt meldingstype
      operationId: get-melding-schema
      tags:
        - Meldingskatalog
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Melding'
  /meldingstype/{meldingstype}/mock:
    parameters:
      - $ref: '#/components/parameters/Meldingstype'
    get:
      summary: Gir en generert melding av en bestemt meldingstype
      operationId: get-melding-mock
      tags:
        - Meldingskatalog
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Melding'
  /system:
    get:
      summary: Gir en liste om alle system og hvilke meldinger de produserer
      operationId: get-system
      tags:
        - System
      parameters:
        - in: query
          name: meldinger
          schema:
            type: boolean
          description: >-
            Hvis satt til true vil meldinger også bli inkludert i responsen
      #security:
      #  - azureAd: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/System'
components:
  securitySchemes:
    azureAd:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: |
        Bruker [AzureAD](https://docs.nais.io/security/auth/azure-ad) til autentisering. 
        Token må ha `audience` satt til `[cluster]:teamdagpenger:dp-rapportering`.
        
        For å teste APIet kan du lage et gyldig OBO-token ved å bruke wonderwalled:
        - [dev-gcp](https://wonderwalled-idporten.intern.dev.nav.no/api/obo?aud=dev-gcp:teamdagpenger:dp-rapportering)

  schemas:
    System:
      type: object
      properties:
        navn:
          type: string
        meldinger:
          type: array
          items:
            type: string
            format: uuid
    Meldingstype:
      description: Meldingstype
      type: object
      properties:
        navn:
          type: string
          example: "Journalpost"
        type:
          type: string
          example: "Behov"
        antall:
          type: integer
        systemer:
          type: array
          items:
            $ref: '#/components/schemas/System'
    Melding:
      description: Melding
      type: object
      allOf:
        - $ref: '#/components/schemas/MeldingKonvolutt'
        - properties:
            type:
              $ref: "#/components/schemas/MeldingType"
    MeldingType:
      description: Hva slags melding det er
      type: string
      enum:
        - Hendelse
        - Behov
        - Løsning
    MeldingKonvolutt:
      description: Konvolutt som er felles for alle meldinger
      type: object
      required:
        - meldingsreferanseId
        - opprettet
        - eventName
        - sporing
      properties:
        meldingsreferanseId:
          type: string
          format: uuid
        opprettet:
          type: string
          format: date-time
        eventName:
          type: string
        sporing:
          type: array
          items:
            $ref: '#/components/schemas/MeldingSporing'
    MeldingSporing:
      description: Sporing av melding
      type: object
      required:
        - id
        - time
      properties:
        id:
          type: string
          format: uuid
        time:
          type: string
          format: date-time
        service:
          type: string
        instance:
          type: string
        image:
          type: string
    Behov:
      description: Behov
      type: object
      required:
        - behovId
        - opprettet
        - behov
        - løsninger
        - meldinger
      properties:
        behovId:
          type: string
          format: uuid
        opprettet:
          type: string
          format: date-time
        løst:
          type: string
          format: date-time
        behov:
          type: array
          items:
            type: string
        løsninger:
          type: array
          items:
            type: string
        meldinger:
          type: array
          items:
            type: string
            format: uuid
            #$ref: '#/components/schemas/Melding'

  parameters:
    Meldingstype:
      name: meldingstype
      in: path
      required: true
      schema:
        type: string
